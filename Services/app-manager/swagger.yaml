swagger: '2.0'
info:
  x-groupId: org.kathra
  x-artifactName: appManager
  description: Kathra Applications Manager
  version: '1.0.0-RC-SNAPSHOT'
  title: Kathra Applications Manager
securityDefinitions:
  kathra_auth:
    type: "oauth2"
    authorizationUrl: "https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/auth"
    tokenUrl: "https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/token"
    flow: "accessCode"
    scopes:
      read: "read everything"
      write: "create everything"
tags:
- name: groups
  description: 'Groups'

- name: components
  description: 'Components'

- name: apiVersions
  description: 'Api versions'

- name: implementations
  description: 'Implementations'

- name: repositories
  description: 'Repositories'

- name: pipelines
  description: 'Pipelines'

paths:
  "/groups":
    get:
      operationId: getGroups
      summary: Get the groups list
      tags:
      - groups
      responses:
        '200':
          description: The Groups list
          schema:
            type: array
            items:
              "$ref": "#/definitions/Group"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"
  
  "/components":
    post:
      operationId: createComponent
      summary: Create a new Component
      tags:
      - components
      parameters:
      - in: body
        name: component
        description: "The parameters for the component to create. Required: name and metadata.groupPath"
        schema:
          "$ref": "#/definitions/Component"
      responses:
        '200':
          description: The Component that have just been created
          schema:
            "$ref": "#/definitions/Component"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "write"
    get:
      operationId: getComponents
      summary: Get the components list
      tags:
      - components
      responses:
        '200':
          description: The Components list
          schema:
            type: array
            items:
              "$ref": "#/definitions/Component"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/components/{componentId}":
    get:
      operationId: getComponentById
      summary: Get the component having the given id"
      tags:
      - components
      parameters:
      - in: path
        name: componentId
        required: true
        description: The ID of the Component to get
        type: string
      responses:
        '200':
          description: The Component having the given id
          schema:
            "$ref": "#/definitions/Component"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/components/{componentId}/implementations":
    get:
      operationId: getComponentImplementations
      summary: Get the component having the given id
      tags:
      - implementations
      parameters:
      - in: path
        name: componentId
        required: true
        description: The ID of the Component to get the implementations from
        type: string
      responses:
        '200':
          description: The array of Implementations of the given Component
          schema:
            type: array
            items:
              "$ref": "#/definitions/Implementation"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/components/{componentId}/apiVersions":
    post:
      operationId: createApiVersion
      summary: Create a new ApiVersion via an OpenAPI file
      tags:
      - apiVersions
      consumes:
      - "multipart/form-data"
      parameters:
      - in: formData
        name: openApiFile
        description: The OpenAPI file representing the APIVersion to create
        type: file
      - in: path
        name: componentId
        required: true
        description: The ID of the Component the APIVersion will be created for
        type: string
      responses:
        '200':
          description: The ApiVersion that have just been created
          schema:
            "$ref": "#/definitions/ApiVersion"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "write"

  "/implementations":
    post:
      operationId: createImplementation
      summary: Create a new Implementation for the given ApiVersion
      tags:
      - implementations
      parameters:
      - in: body
        name: implementationParameters
        description: The parameters for the implementation to create
        schema:
          type: object
          required:
          - name
          - apiVersion
          - language
          properties:
            name:
              type: string
              description: Implementation's name
            apiVersion:
              "$ref": "#/definitions/ApiVersion"
            language:
              type: string
              description: The language to use for source code generation
      responses:
        '200':
          description: The Implementation that have just been created
          schema:
            "$ref": "#/definitions/Implementation"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "write"
    get:
      operationId: getImplementations
      summary: Get the Implementations list
      tags:
      - implementations
      responses:
        '200':
          description: The Implementations list
          schema:
            type: array
            items:
              "$ref": "#/definitions/Implementation"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/implementations/{implementationId}":
    get:
      operationId: getImplementationById
      summary: Get the Implementation having the given id"
      tags:
      - implementations
      parameters:
      - in: path
        name: implementationId
        required: true
        description: The ID of the Implementation to get
        type: string
      responses:
        '200':
          description: The Implementation having the given id
          schema:
            "$ref": "#/definitions/Implementation"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/sourceRepositories/branches/{sourceRepositoryId}":
    get:
      operationId: getRepositoryBranches
      summary: Get the branches for the given SourceRepository
      tags:
      - repositories
      parameters:
      - in: path
        name: sourceRepositoryId
        required: true
        description: The ID of the SourceRepository to get
        type: string
      responses:
        '200':
          description: The Branch list of the given SourceRepository
          schema:
            type: array
            items:
              type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/commits/{sourceRepositoryId}":
    get:
      operationId: getRepositoryCommitsForBranch
      summary: Get the commits for the given SourceRepository for a given branch
      tags:
      - repositories
      parameters:
      - in: path
        name: sourceRepositoryId
        required: true
        description: The ID of the SourceRepository to get the commits from
        type: string
      - in: query
        name: branch
        required: true
        description: The name of the branch to get the commits from
        type: string
      responses:
        '200':
          description: The Commits list of the given SourceRepository for the given branch
          schema:
            type: array
            items:
              "$ref": "#/definitions/Commit"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

  "/apiFile":
    get:
      operationId: getApiFile
      summary: Get the API File from the specified source repository
      tags:
      - repositories
      consumes:
      - "multipart/form-data"
      parameters:
      - in: formData
        name: url
        description: The URL of the source repository to get the API file from
        type: string
      - in: formData
        name: tag
        description: The source repository tag corresponding to the version of the API described by the file
        type: string
      responses:
        '200':
          description: The OpenAPI file describing the API
          schema:
            type: file
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"
  
  "/apiFileValidation":
    post:
      summary: Check the integrity of an API file
      operationId: getApiFileValidation
      consumes:
      - multipart/form-data
      produces:
      - application/json
      parameters:
      - name: apiFile
        in: formData
        description: API specification of the component's API
        required: true
        type: file
      responses:
        '200':
          description: apiFileValidation Response
          schema:
            "$ref": "#/definitions/ApiFileValidationResponse"

  "/pipelines/{pipelineId}/builds":
    get:
      operationId: getPipelineBuildsForBranch
      summary: Get the builds for the given pipeline for a given branch
      tags:
      - pipelines
      parameters:
      - in: path
        name: pipelineId
        required: true
        description: The ID of the Pipeline to get the builds of
        type: string
      - in: query
        name: branch
        required: true
        description: The name of the branch to get the builds of
        type: string
      responses:
        '200':
          description: The Commits list of the given SourceRepository for the given branch
          schema:
            type: array
            items:
              "$ref": "#/definitions/Commit"
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - "read"

definitions:
  Group:
    type: object
    x-artifactId: kathra-core-model
  Component:
    type: object
    x-artifactId: kathra-core-model
  ApiVersion:
    type: object
    x-artifactId: kathra-core-model
  Implementation:
    type: object
    x-artifactId: kathra-core-model
  Commit:
    type: object
    properties:
      id:
        type: string
      author:
        type: string
      message:
        type: string
      hash:
        type: string
      date:
        type: string
  ApiFileValidationResponse:
    type: object
    properties:
      format:
        type: string
        enum: [json,yaml,invalid]
      name:
        type: string
        description: Service's name
      groupId:
        type: string
        description: Service's groupId
      version:
        type: string
        description: Service's version
      operations:
        type: boolean
        description: Contains operations
      model:
        type: boolean
        description: Contains model
x-dependencies:
- artifactId: kathra-core-model
  groupId: org.kathra
  artifactVersion: 1.0.0-RC-SNAPSHOT
  modelPackage: core.model
