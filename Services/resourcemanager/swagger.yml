info:
  x-groupId: org.kathra
  x-artifactName: resourceManager
  description: Kathra Resources Manager
  version: 1.2.0
  title: Kathra Resource Manager
securityDefinitions:
  kathra_auth:
    type: oauth2
    authorizationUrl: >-
      https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/auth
    tokenUrl: >-
      https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/token
    flow: accessCode
    scopes:
      read: read everything
      write: create everything
tags:
- name: Components
  description: Components management API
- name: BinaryRepositories
  description: BinaryRepositories management API
- name: Libraries
  description: Libraries management API
- name: Implementations
  description: Implementations management API
- name: ImplementationVersions
  description: ImplementationVersions management API
- name: ApiVersions
  description: ApiVersions management API
- name: LibraryApiVersions
  description: LibraryApiVersions management API
- name: SourceRepositories
  description: SourceRepositories management API
- name: Pipelines
  description: Pipelines management API
- name: Groups
  description: Groups management API
- name: KeyPairs
  description: KeyPairs management API
- name: Users
  description: Users management API
- name: Assignations
  description: Assignations management API
- name: CatalogEntries
  description: CatalogEntries management API
- name: CatalogEntryPackages
  description: CatalogEntryPackages management API
paths:
  /components:
    get:
      tags:
      - Components
      operationId: getComponents
      summary: Retrieve a list of accessible components for authenticated user
      responses:
        '200':
          description: List of accessible components for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Component'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Components
      summary: Add a new component
      operationId: addComponent
      parameters:
      - name: component
        in: body
        description: Component object to be created
        required: true
        schema:
          $ref: '#/definitions/Component'
      - name: groupPath
        description: group's path
        in: query
        type: string
        required: true
        pattern: '^[a-zA-Z0-9-_/]+$'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/Component'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/components/{resourceId}':
    get:
      tags:
      - Components
      summary: Retrieve a specific component object
      operationId: getComponent
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/Component'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Components
      summary: Partially update a registered component
      operationId: updateComponentAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: component
        in: body
        description: Component object to be updated
        required: true
        schema:
          $ref: '#/definitions/Component'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Component'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Components
      summary: Fully update a registered component
      operationId: updateComponent
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: component
        in: body
        description: Component object to be updated
        required: true
        schema:
          $ref: '#/definitions/Component'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Component'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Components
      summary: Delete a registered component
      operationId: deleteComponent
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /binaryrepositories:
    get:
      tags:
      - BinaryRepositories
      operationId: getBinaryRepositories
      summary: Retrieve a list of accessible binaryrepositories for authenticated
        user
      responses:
        '200':
          description: List of accessible binaryrepositories for the authenticated
            user
          schema:
            type: array
            items:
              $ref: '#/definitions/BinaryRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - BinaryRepositories
      summary: Add a new binaryrepository
      operationId: addBinaryRepository
      parameters:
      - name: binaryrepository
        in: body
        description: BinaryRepository object to be created
        required: true
        schema:
          $ref: '#/definitions/BinaryRepository'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/BinaryRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/binaryrepositories/{resourceId}':
    get:
      tags:
      - BinaryRepositories
      summary: Retrieve a specific binaryrepository object
      operationId: getBinaryRepository
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/BinaryRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - BinaryRepositories
      summary: Partially update a registered binaryrepository
      operationId: updateBinaryRepositoryAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: binaryrepository
        in: body
        description: BinaryRepository object to be updated
        required: true
        schema:
          $ref: '#/definitions/BinaryRepository'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/BinaryRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - BinaryRepositories
      summary: Fully update a registered binaryrepository
      operationId: updateBinaryRepository
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: binaryrepository
        in: body
        description: BinaryRepository object to be updated
        required: true
        schema:
          $ref: '#/definitions/BinaryRepository'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/BinaryRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - BinaryRepositories
      summary: Delete a registered binaryrepository
      operationId: deleteBinaryRepository
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /libraries:
    get:
      tags:
      - Libraries
      operationId: getLibraries
      summary: Retrieve a list of accessible libraries for authenticated user
      responses:
        '200':
          description: List of accessible libraries for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Library'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Libraries
      summary: Add a new library
      operationId: addLibrary
      parameters:
      - name: library
        in: body
        description: Library object to be created
        required: true
        schema:
          $ref: '#/definitions/Library'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/Library'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/libraries/{resourceId}':
    get:
      tags:
      - Libraries
      summary: Retrieve a specific library object
      operationId: getLibrary
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/Library'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Libraries
      summary: Partially update a registered library
      operationId: updateLibraryAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: library
        in: body
        description: Library object to be updated
        required: true
        schema:
          $ref: '#/definitions/Library'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Library'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Libraries
      summary: Fully update a registered library
      operationId: updateLibrary
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: library
        in: body
        description: Library object to be updated
        required: true
        schema:
          $ref: '#/definitions/Library'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Library'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Libraries
      summary: Delete a registered library
      operationId: deleteLibrary
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /implementations:
    get:
      tags:
      - Implementations
      operationId: getImplementations
      summary: Retrieve a list of accessible implementations for authenticated user
      responses:
        '200':
          description: List of accessible implementations for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Implementation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Implementations
      summary: Add a new implementation
      operationId: addImplementation
      parameters:
      - name: implementation
        in: body
        description: Implementation object to be created
        required: true
        schema:
          $ref: '#/definitions/Implementation'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/Implementation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/implementations/{resourceId}':
    get:
      tags:
      - Implementations
      summary: Retrieve a specific implementation object
      operationId: getImplementation
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/Implementation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Implementations
      summary: Partially update a registered implementation
      operationId: updateImplementationAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: implementation
        in: body
        description: Implementation object to be updated
        required: true
        schema:
          $ref: '#/definitions/Implementation'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Implementation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Implementations
      summary: Fully update a registered implementation
      operationId: updateImplementation
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: implementation
        in: body
        description: Implementation object to be updated
        required: true
        schema:
          $ref: '#/definitions/Implementation'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Implementation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Implementations
      summary: Delete a registered implementation
      operationId: deleteImplementation
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /implementationversions:
    get:
      tags:
      - ImplementationVersions
      operationId: getImplementationVersions
      summary: >-
        Retrieve a list of accessible implementationversions for authenticated user
      responses:
        '200':
          description: List of accessible implementationversions for the authenticated
            user
          schema:
            type: array
            items:
              $ref: '#/definitions/ImplementationVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - ImplementationVersions
      summary: Add a new implementationversion
      operationId: addImplementationVersion
      parameters:
      - name: implementationversion
        in: body
        description: ImplementationVersion object to be created
        required: true
        schema:
          $ref: '#/definitions/ImplementationVersion'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/ImplementationVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/implementationversions/{resourceId}':
    get:
      tags:
      - ImplementationVersions
      summary: Retrieve a specific implementationversion object
      operationId: getImplementationVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/ImplementationVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - ImplementationVersions
      summary: Partially update a registered implementationversion
      operationId: updateImplementationVersionAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: implementationversion
        in: body
        description: ImplementationVersion object to be updated
        required: true
        schema:
          $ref: '#/definitions/ImplementationVersion'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/ImplementationVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - ImplementationVersions
      summary: Fully update a registered implementationversion
      operationId: updateImplementationVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: implementationversion
        in: body
        description: ImplementationVersion object to be updated
        required: true
        schema:
          $ref: '#/definitions/ImplementationVersion'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/ImplementationVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - ImplementationVersions
      summary: Delete a registered implementationversion
      operationId: deleteImplementationVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /apiversions:
    get:
      tags:
      - ApiVersions
      operationId: getApiVersions
      summary: Retrieve a list of accessible apiversions for authenticated user
      responses:
        '200':
          description: List of accessible apiversions for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/ApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - ApiVersions
      summary: Add a new apiversion
      operationId: addApiVersion
      parameters:
      - name: apiversion
        in: body
        description: ApiVersion object to be created
        required: true
        schema:
          $ref: '#/definitions/ApiVersion'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/ApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/apiversions/{resourceId}':
    get:
      tags:
      - ApiVersions
      summary: Retrieve a specific apiversion object
      operationId: getApiVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/ApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - ApiVersions
      summary: Partially update a registered apiversion
      operationId: updateApiVersionAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: apiversion
        in: body
        description: ApiVersion object to be updated
        required: true
        schema:
          $ref: '#/definitions/ApiVersion'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/ApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - ApiVersions
      summary: Fully update a registered apiversion
      operationId: updateApiVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: apiversion
        in: body
        description: ApiVersion object to be updated
        required: true
        schema:
          $ref: '#/definitions/ApiVersion'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/ApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - ApiVersions
      summary: Delete a registered apiversion
      operationId: deleteApiVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /libraryapiversions:
    get:
      tags:
      - LibraryApiVersions
      operationId: getLibraryApiVersions
      summary: Retrieve a list of accessible libraryapiversions for authenticated
        user
      responses:
        '200':
          description: List of accessible libraryapiversions for the authenticated
            user
          schema:
            type: array
            items:
              $ref: '#/definitions/LibraryApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - LibraryApiVersions
      summary: Add a new libraryapiversion
      operationId: addLibraryApiVersion
      parameters:
      - name: libraryapiversion
        in: body
        description: LibraryApiVersion object to be created
        required: true
        schema:
          $ref: '#/definitions/LibraryApiVersion'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/LibraryApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/libraryapiversions/{resourceId}':
    get:
      tags:
      - LibraryApiVersions
      summary: Retrieve a specific libraryapiversion object
      operationId: getLibraryApiVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/LibraryApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - LibraryApiVersions
      summary: Partially update a registered libraryapiversion
      operationId: updateLibraryApiVersionAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: libraryapiversion
        in: body
        description: LibraryApiVersion object to be updated
        required: true
        schema:
          $ref: '#/definitions/LibraryApiVersion'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/LibraryApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - LibraryApiVersions
      summary: Fully update a registered libraryapiversion
      operationId: updateLibraryApiVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: libraryapiversion
        in: body
        description: LibraryApiVersion object to be updated
        required: true
        schema:
          $ref: '#/definitions/LibraryApiVersion'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/LibraryApiVersion'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - LibraryApiVersions
      summary: Delete a registered libraryapiversion
      operationId: deleteLibraryApiVersion
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /sourcerepositories:
    get:
      tags:
      - SourceRepositories
      operationId: getSourceRepositories
      summary: Retrieve a list of accessible sourcerepositories for authenticated
        user
      responses:
        '200':
          description: List of accessible sourcerepositories for the authenticated
            user
          schema:
            type: array
            items:
              $ref: '#/definitions/SourceRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - SourceRepositories
      summary: Add a new sourcerepository
      operationId: addSourceRepository
      parameters:
      - name: sourcerepository
        in: body
        description: SourceRepository object to be created
        required: true
        schema:
          $ref: '#/definitions/SourceRepository'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/SourceRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/sourcerepositories/{resourceId}':
    get:
      tags:
      - SourceRepositories
      summary: Retrieve a specific sourcerepository object
      operationId: getSourceRepository
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/SourceRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - SourceRepositories
      summary: Partially update a registered sourcerepository
      operationId: updateSourceRepositoryAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: sourcerepository
        in: body
        description: SourceRepository object to be updated
        required: true
        schema:
          $ref: '#/definitions/SourceRepository'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/SourceRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - SourceRepositories
      summary: Fully update a registered sourcerepository
      operationId: updateSourceRepository
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: sourcerepository
        in: body
        description: SourceRepository object to be updated
        required: true
        schema:
          $ref: '#/definitions/SourceRepository'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/SourceRepository'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - SourceRepositories
      summary: Delete a registered sourcerepository
      operationId: deleteSourceRepository
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /pipelines:
    get:
      tags:
      - Pipelines
      operationId: getPipelines
      summary: Retrieve a list of accessible pipelines for authenticated user
      responses:
        '200':
          description: List of accessible pipelines for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Pipeline'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Pipelines
      summary: Add a new pipeline
      operationId: addPipeline
      parameters:
      - name: pipeline
        in: body
        description: Pipeline object to be created
        required: true
        schema:
          $ref: '#/definitions/Pipeline'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/Pipeline'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/pipelines/{resourceId}':
    get:
      tags:
      - Pipelines
      summary: Retrieve a specific pipeline object
      operationId: getPipeline
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/Pipeline'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Pipelines
      summary: Partially update a registered pipeline
      operationId: updatePipelineAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: pipeline
        in: body
        description: Pipeline object to be updated
        required: true
        schema:
          $ref: '#/definitions/Pipeline'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Pipeline'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Pipelines
      summary: Fully update a registered pipeline
      operationId: updatePipeline
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: pipeline
        in: body
        description: Pipeline object to be updated
        required: true
        schema:
          $ref: '#/definitions/Pipeline'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Pipeline'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Pipelines
      summary: Delete a registered pipeline
      operationId: deletePipeline
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /groups:
    get:
      tags:
      - Groups
      operationId: getGroups
      summary: Retrieve a list of accessible groups for authenticated user
      responses:
        '200':
          description: List of accessible groups for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Groups
      summary: Add a new group
      operationId: addGroup
      parameters:
      - name: group
        in: body
        description: Group object to be created
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/groups/{resourceId}':
    get:
      tags:
      - Groups
      summary: Retrieve a specific group object
      operationId: getGroup
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Groups
      summary: Partially update a registered group
      operationId: updateGroupAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: group
        in: body
        description: Group object to be updated
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Groups
      summary: Fully update a registered group
      operationId: updateGroup
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: group
        in: body
        description: Group object to be updated
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Group'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Groups
      summary: Delete a registered group
      operationId: deleteGroup
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /keypairs:
    get:
      tags:
      - KeyPairs
      operationId: getKeyPairs
      summary: Retrieve a list of accessible keypairs for authenticated user
      responses:
        '200':
          description: List of accessible keypairs for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/KeyPair'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - KeyPairs
      summary: Add a new keypair
      operationId: addKeyPair
      parameters:
      - name: keypair
        in: body
        description: KeyPair object to be created
        required: true
        schema:
          $ref: '#/definitions/KeyPair'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/KeyPair'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/keypairs/{resourceId}':
    get:
      tags:
      - KeyPairs
      summary: Retrieve a specific keypair object
      operationId: getKeyPair
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/KeyPair'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - KeyPairs
      summary: Partially update a registered keypair
      operationId: updateKeyPairAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: keypair
        in: body
        description: KeyPair object to be updated
        required: true
        schema:
          $ref: '#/definitions/KeyPair'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/KeyPair'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - KeyPairs
      summary: Fully update a registered keypair
      operationId: updateKeyPair
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: keypair
        in: body
        description: KeyPair object to be updated
        required: true
        schema:
          $ref: '#/definitions/KeyPair'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/KeyPair'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - KeyPairs
      summary: Delete a registered keypair
      operationId: deleteKeyPair
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /users:
    get:
      tags:
      - Users
      operationId: getUsers
      summary: Retrieve a list of accessible users for authenticated user
      responses:
        '200':
          description: List of accessible users for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Users
      summary: Add a new user
      operationId: addUser
      parameters:
      - name: user
        in: body
        description: User object to be created
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/users/{resourceId}':
    get:
      tags:
      - Users
      summary: Retrieve a specific user object
      operationId: getUser
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Users
      summary: Partially update a registered user
      operationId: updateUserAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: user
        in: body
        description: User object to be updated
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Users
      summary: Fully update a registered user
      operationId: updateUser
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: user
        in: body
        description: User object to be updated
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/User'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Users
      summary: Delete a registered user
      operationId: deleteUser
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /assignations:
    get:
      tags:
      - Assignations
      operationId: getAssignations
      summary: Retrieve a list of accessible assignations for authenticated user
      responses:
        '200':
          description: List of accessible assignations for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Assignation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - Assignations
      summary: Add a new assignation
      operationId: addAssignation
      parameters:
      - name: assignation
        in: body
        description: Assignation object to be created
        required: true
        schema:
          $ref: '#/definitions/Assignation'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/Assignation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/assignations/{resourceId}':
    get:
      tags:
      - Assignations
      summary: Retrieve a specific assignation object
      operationId: getAssignation
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/Assignation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - Assignations
      summary: Partially update a registered assignation
      operationId: updateAssignationAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: assignation
        in: body
        description: Assignation object to be updated
        required: true
        schema:
          $ref: '#/definitions/Assignation'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Assignation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - Assignations
      summary: Fully update a registered assignation
      operationId: updateAssignation
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: assignation
        in: body
        description: Assignation object to be updated
        required: true
        schema:
          $ref: '#/definitions/Assignation'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/Assignation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - Assignations
      summary: Delete a registered assignation
      operationId: deleteAssignation
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /catalogentries:
    get:
      tags:
      - CatalogEntries
      operationId: getCatalogEntries
      summary: Retrieve a list of accessible catalogentries for authenticated user
      responses:
        '200':
          description: List of accessible catalogentries for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogEntry'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - CatalogEntries
      summary: Add a new catalogentry
      operationId: addCatalogEntry
      parameters:
      - name: catalogentry
        in: body
        description: CatalogEntry object to be created
        required: true
        schema:
          $ref: '#/definitions/CatalogEntry'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/CatalogEntry'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/catalogentries/{resourceId}':
    get:
      tags:
      - CatalogEntries
      summary: Retrieve a specific catalogentry object
      operationId: getCatalogEntry
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/CatalogEntry'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - CatalogEntries
      summary: Partially update a registered catalogentry
      operationId: updateCatalogEntryAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: catalogentry
        in: body
        description: CatalogEntry object to be updated
        required: true
        schema:
          $ref: '#/definitions/CatalogEntry'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/CatalogEntry'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - CatalogEntries
      summary: Fully update a registered catalogentry
      operationId: updateCatalogEntry
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: catalogentry
        in: body
        description: CatalogEntry object to be updated
        required: true
        schema:
          $ref: '#/definitions/CatalogEntry'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/CatalogEntry'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - CatalogEntries
      summary: Delete a registered catalogentry
      operationId: deleteCatalogEntry
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  /catalogentrypackages:
    get:
      tags:
      - CatalogEntryPackages
      operationId: getCatalogEntryPackages
      summary: >-
        Retrieve a list of accessible catalogentrypackages for authenticated user
      responses:
        '200':
          description: List of accessible catalogentrypackages for the authenticated
            user
          schema:
            type: array
            items:
              $ref: '#/definitions/CatalogEntryPackage'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    post:
      tags:
      - CatalogEntryPackages
      summary: Add a new catalogentrypackage
      operationId: addCatalogEntryPackage
      parameters:
      - name: catalogentrypackage
        in: body
        description: CatalogEntryPackage object to be created
        required: true
        schema:
          $ref: '#/definitions/CatalogEntryPackage'
      responses:
        '200':
          description: Returns the created object
          schema:
            $ref: '#/definitions/CatalogEntryPackage'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/catalogentrypackages/{resourceId}':
    get:
      tags:
      - CatalogEntryPackages
      summary: Retrieve a specific catalogentrypackage object
      operationId: getCatalogEntryPackage
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Returns the object
          schema:
            $ref: '#/definitions/CatalogEntryPackage'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
    patch:
      tags:
      - CatalogEntryPackages
      summary: Partially update a registered catalogentrypackage
      operationId: updateCatalogEntryPackageAttributes
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: catalogentrypackage
        in: body
        description: CatalogEntryPackage object to be updated
        required: true
        schema:
          $ref: '#/definitions/CatalogEntryPackage'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/CatalogEntryPackage'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    put:
      tags:
      - CatalogEntryPackages
      summary: Fully update a registered catalogentrypackage
      operationId: updateCatalogEntryPackage
      parameters:
      - $ref: '#/parameters/resourceId'
      - name: catalogentrypackage
        in: body
        description: CatalogEntryPackage object to be updated
        required: true
        schema:
          $ref: '#/definitions/CatalogEntryPackage'
      responses:
        '200':
          description: Returns the modified object
          schema:
            $ref: '#/definitions/CatalogEntryPackage'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
    delete:
      tags:
      - CatalogEntryPackages
      summary: Delete a registered catalogentrypackage
      operationId: deleteCatalogEntryPackage
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: Object is deleted
          schema:
            type: string
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - write
  '/components/{resourceId}/implementations':
    get:
      tags:
      - Components
      summary: >-
        Retrieve a list of accessible implementations for specific component and authenticated
        user
      operationId: getImplementationsComponent
      parameters:
      - $ref: '#/parameters/resourceId'
      responses:
        '200':
          description: >-
            List of accessible implementations for specific component and the authenticated
            user
          schema:
            type: array
            items:
              $ref: '#/definitions/Implementation'
        '401':
          description: Unauthorized
      security:
      - kathra_auth:
        - read
parameters:
  resourceId:
    name: resourceId
    description: resource's id
    in: path
    type: string
    required: true
    pattern: '^[a-zA-Z0-9-_]+$'
definitions:
  Component:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: Component
      type: Component
  BinaryRepository:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: BinaryRepository
      type: BinaryRepository
  Library:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: Library
      type: Library
  Implementation:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: Implementation
      type: Implementation
  ImplementationVersion:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: ImplementationVersion
      type: ImplementationVersion
  ApiVersion:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: ApiVersion
      type: ApiVersion
  LibraryApiVersion:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: LibraryApiVersion
      type: LibraryApiVersion
  SourceRepository:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: SourceRepository
      type: SourceRepository
  Pipeline:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: Pipeline
      type: Pipeline
  Group:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: Group
      type: Group
  KeyPair:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: KeyPair
      type: KeyPair
  User:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: User
      type: User
  Assignation:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: Assignation
      type: Assignation
  CatalogEntry:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: CatalogEntry
      type: CatalogEntry
  CatalogEntryPackage:
    type: object
    x-artifactId: kathra-core-model
    x-go-type:
      import:
        package: github.com/kathra-project/kathra-core-model-go/models
        alias: CatalogEntryPackage
      type: CatalogEntryPackage
x-dependencies:
- artifactId: kathra-core-model
  groupId: org.kathra
  artifactVersion: 1.1.0
  modelPackage: core.model
