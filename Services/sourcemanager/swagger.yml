swagger: "2.0"
info:
  x-groupId: org.kathra
  x-artifactName: SourceManager
  description: Kathra SourceManager is a Kathra Service in charge of source management operations
  version: 1.3.0-SNAPSHOT
  title: Kathra SourceManager
securityDefinitions:
  kathra_auth:
    type: oauth2
    authorizationUrl: https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/auth
    tokenUrl: https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/token
    flow: accessCode
    scopes:
      read: read everything
      write: create everything
paths:
  /folders/{folderPath}:
    get:
      operationId: getFolder
      summary: Retrieve specified folder object
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/folderPath'
      responses:
        "200":
          description: Created object
          schema:
            $ref: '#/definitions/Folder'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
  /folders/{folderPath}/sourceRepositories:
    get:
      operationId: getSourceRepositoriesInFolder
      summary: Retrieve accessible Source Repositories in the specified folder
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/folderPath'
      responses:
        "200":
          description: List of accessible Source Repositories in the specified folder
          schema:
            type: array
            items:
              $ref: '#/definitions/SourceRepository'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
  /sourceRepositories:
    post:
      summary: Create a new Source Repository in Kathra Repository Provider
      operationId: createSourceRepository
      produces:
        - application/json
      parameters:
        - name: sourceRepository
          in: body
          description: SourceRepository object to be created
          required: true
          schema:
            $ref: '#/definitions/SourceRepository'
        - name: deployKeys
          in: query
          description: A list of deployKey Ids to enable in the created source repository
          required: false
          type: array
          items:
            type: string
      responses:
        "200":
          description: Created object
          schema:
            $ref: '#/definitions/SourceRepository'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - write
  /sourceRepositories/{sourceRepositoryPath}:
    delete:
      operationId: deleteSourceRepository
      summary: Delete Source Repository in Kathra Repository Provider
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sourceRepositoryPath'
      responses:
        "200":
          description: Source repository deleted
          schema:
            type: string
        "404":
          description: Source repository not found
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - write
  /sourceRepositories/{sourceRepositoryPath}/branches:
    get:
      operationId: getBranches
      summary: Retrieve accessible branches in an existing Kathra SourceRepository
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sourceRepositoryPath'
      responses:
        "200":
          description: List of accessible Source Repositories branches in the specified repo
          schema:
            type: array
            items:
              type: string
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
    post:
      summary: Create a new branch in an existing Kathra SourceRepository
      operationId: createBranch
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sourceRepositoryPath'
        - name: branchRef
          in: query
          required: false
          type: string
        - name: branch
          in: body
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Created branch name
          schema:
            type: string
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - write
  /folders:
    get:
      operationId: getFolders
      summary: Retrieve accessible folders for user using provided identity
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: List of accessible folders for the authenticated user
          schema:
            type: array
            items:
              $ref: '#/definitions/Folder'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
    post:
      summary: Create a new folder in the Source Repository Provider
      operationId: createFolder
      produces:
        - application/json
      parameters:
        - name: folder
          in: body
          description: Folder object
          required: true
          schema:
            $ref: '#/definitions/Folder'
      responses:
        "200":
          description: The created folder
          schema:
            $ref: '#/definitions/Folder'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - write
  /sourceRepositories/{sourceRepositoryPath}/branches/{branch}/commits:
    get:
      operationId: getCommits
      summary: Retrieve accessible commits in an existing branch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sourceRepositoryPath'
        - $ref: '#/parameters/branch'
      responses:
        "200":
          description: List of commits in the specified branch
          schema:
            type: array
            items:
              $ref: '#/definitions/SourceRepositoryCommit'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
    post:
      operationId: createCommit
      summary: Create new commit in branch
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sourceRepositoryPath'
        - $ref: '#/parameters/branch'
        - $ref: '#/parameters/file'
        - $ref: '#/parameters/filepath'
        - $ref: '#/parameters/uncompress'
        - $ref: '#/parameters/tag'
        - $ref: '#/parameters/replaceRepositoryContent'
      responses:
        "200":
          description: Created commit
          schema:
            $ref: '#/definitions/SourceRepositoryCommit'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
  /sourceRepositories/{sourceRepositoryPath}/branches/{branch}/file:
    get:
      operationId: getFile
      summary: Retrieve an existing file in an existing branch
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/sourceRepositoryPath'
        - $ref: '#/parameters/branch'
        - $ref: '#/parameters/filetoget'
      responses:
        "200":
          description: The specified file
          schema:
            type: file
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - kathra_auth:
            - read
  /sourceRepositories/{sourceRepositoryPath}/deployKeys:
    post:
      operationId: createDeployKey
      summary: Create new deployKey in specified project
      produces:
        - application/json
      parameters:
        - name: keyName
          in: query
          required: true
          type: string
        - name: sshPublicKey
          in: body
          required: true
          schema:
            type: string
        - $ref: '#/parameters/sourceRepositoryPath'
      responses:
        "200":
          description: Response indicating success
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
  /sourceRepositories/{sourceRepositoryPath}/memberships:
    get:
      operationId: getMemberships
      summary: Retrieve memberships in specified project
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: memberType
          in: query
          required: false
          type: string
          enum:
            - user
            - group
          description: Type of memberships to retrieve, return all types if not specified
        - $ref: '#/parameters/sourceRepositoryPath'
      responses:
        "200":
          description: Membership list
          schema:
            type: array
            items:
              $ref: '#/definitions/Membership'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
  /batch/memberships:
    post:
      operationId: addMemberships
      summary: Add multiple memberships in specified projects
      produces:
        - application/json
      parameters:
        - name: memberships
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Membership'
      responses:
        "200":
          description: Response indicating success
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
    delete:
      operationId: deleteMemberships
      summary: Delete multiple memberships in specified projects
      produces:
        - application/json
      parameters:
        - name: memberships
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/Membership'
      responses:
        "200":
          description: Response indicating success
          schema:
            $ref: '#/definitions/ApiResponse'
        "401":
          description: Unauthorized
      security:
        - kathra_auth:
            - read
parameters:
  file:
    name: file
    in: formData
    description: File to commit
    required: true
    type: file
  filepath:
    name: filepath
    in: query
    description: The location in which the file has to be commited
    required: false
    type: string
  filetoget:
    name: filepath
    in: query
    description: The location of the file to retrieve
    required: true
    type: string
  uncompress:
    name: uncompress
    in: query
    description: Boolean to indicate if provided file should be uncompressed before being commited
    default: false
    required: false
    type: boolean
  replaceRepositoryContent:
    name: replaceRepositoryContent
    in: query
    description: Boolean to indicate if provided file should replace the whole repository content
    default: false
    required: false
    type: boolean
  folderPath:
    name: folderPath
    in: path
    description: Folder's ID in which artifacts will be created
    required: true
    type: string
  sourceRepositoryPath:
    name: sourceRepositoryPath
    in: path
    description: SourceRepository's Path
    required: true
    type: string
  branch:
    name: branch
    in: path
    description: SourceRepository's branch
    required: true
    type: string
  tag:
    name: tag
    in: query
    description: Git tag to put on the commit
    required: false
    type: string
definitions:
  Folder:
    properties:
      path:
        type: string
        description: Folder's path
  SourceRepository:
    type: object
    x-artifactId: kathra-core-model
  SourceRepositoryCommit:
    type: object
    x-artifactId: kathra-core-model
  Membership:
    type: object
    x-artifactId: kathra-core-model
x-dependencies:
  - artifactId: kathra-core-model
    groupId: org.kathra
    artifactVersion: 1.3.0-SNAPSHOT
    modelPackage: core.model
