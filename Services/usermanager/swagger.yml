info:
  version: 1.2.0
  title: Kathra Users Management API
  x-artifactName: userManager
  x-groupId: org.kathra
securityDefinitions:
  kathra_auth:
    type: oauth2
    authorizationUrl: https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/auth
    tokenUrl: https://keycloak.irtsysx.fr/auth/realms/kathra/protocol/openid-connect/token
    flow: accessCode
    scopes:
      read: read everything
      write: create everything
basePath: /api/v1
paths:
  /users:
    get:
      summary: Find all users
      operationId: getUsers
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - read
    post:
      summary: Create a new user
      operationId: createUser
      parameters:
      - name: user
        in: body
        description: User object to be created
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - write
  /users/{userId}/groupsMembers:
    post:
      summary: Return groups from user
      operationId: getGroupsAssignationsFromUser
      parameters:
      - $ref: '#/parameters/userId'
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - read
  /users/{userId}/quitGroup/{groupPath}:
    post:
      summary: Unassign user to group
      operationId: unassignUserToGroup
      parameters:
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/groupPath'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - read
  /users/{userId}/joinGroup/{groupPath}:
    post:
      summary: Assign user to group
      operationId: assignUserToGroup
      parameters:
      - $ref: '#/parameters/userId'
      - $ref: '#/parameters/groupPath'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - read
  /users/{userId}:
    get:
      summary: Return user
      operationId: getUser
      parameters:
      - $ref: '#/parameters/userId'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - read
    delete:
      summary: Delete user
      operationId: deleteUser
      parameters:
      - $ref: '#/parameters/userId'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - read
    put:
      summary: Update user
      operationId: updateUser
      parameters:
      - $ref: '#/parameters/userId'
      - name: user
        in: body
        description: User object to be updated
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - write
    patch:
      summary: Patch user
      operationId: patchUser
      parameters:
      - $ref: '#/parameters/userId'
      - name: user
        in: body
        description: User object to be patched
        required: true
        schema:
          $ref: '#/definitions/User'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/User'
      security:
      - kathra_auth:
        - write
  /groups:
    get:
      summary: Find all groups
      operationId: getGroups
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - read
    post:
      summary: Create a new group
      operationId: createGroup
      parameters:
      - name: group
        in: body
        description: Group object to be created
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - write
  /groups/{groupPath}:
    get:
      summary: Return group
      operationId: getGroup
      parameters:
      - $ref: '#/parameters/groupPath'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - read
    delete:
      summary: Delete group
      operationId: deleteGroup
      parameters:
      - $ref: '#/parameters/groupPath'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - write
    put:
      summary: Update group
      operationId: updateGroup
      parameters:
      - $ref: '#/parameters/groupPath'
      - name: group
        in: body
        description: Group object to be created
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - write
    patch:
      summary: Patch group
      operationId: patchGroup
      parameters:
      - $ref: '#/parameters/groupPath'
      - name: group
        in: body
        description: Group object to be created
        required: true
        schema:
          $ref: '#/definitions/Group'
      responses:
        200:
          description: successful operation
          schema:
            $ref: '#/definitions/Group'
      security:
      - kathra_auth:
        - write
parameters:
  groupPath:
    name: groupPath
    in: path
    description: Group Path
    required: true
    type: string
  userId:
    name: userId
    in: path
    description: User id
    required: true
    type: string
definitions:
  User:
    type: object
    x-artifactId: kathra-core-model
  Group:
    type: object
    x-artifactId: kathra-core-model
x-dependencies:
- artifactId: kathra-core-model
  groupId: org.kathra
  artifactVersion: 1.2.0
  modelPackage: core.model
